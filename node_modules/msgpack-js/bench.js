var msgpack = require("./.");
var msgpackOop = require('./msgpack.oop');
var msgpackNew = require('./new');
var data = require("./data")
var encoded = msgpack.encode(data);
var json = JSON.stringify(data);
var jsonb = new Buffer(json);
var assert = require('assert');

assert.deepEqual(JSON.parse(json), data);
assert.deepEqual(JSON.parse(jsonb.toString('utf8')), data);
assert.deepEqual(msgpack.decode(encoded), data);
assert.deepEqual(msgpackNew.decode(encoded), data);
assert.deepEqual(msgpackOop.decode(encoded), data);

var tests = {
  json: function () {
    return JSON.parse(json);
  },
  // jsonb: function () {
  //   return JSON.parse(jsonb.toString("utf8"));
  // },
  msgpack: function () {
    return msgpack.decode(encoded);
  },
  msgpackOop: function () {
    return msgpackOop.decode(encoded);
  },
  msgpackNew: function () {
    return msgpackNew.decode(encoded);
  }
}

var runs = 100000;
while (true) {
  Object.keys(tests).forEach(function (name) {
    var fn = tests[name];
    var i = runs;
    var before = Date.now();
    while (--i) {
      fn();
    }
    var delta = Date.now() - before;
    console.log((runs / delta * 1000) >> 0, name);
  });
}